{"version":3,"file":"static/js/620.740d4e3a.chunk.js","mappings":"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","sources":["components/Uploader.tsx","pages/Home.tsx"],"sourcesContent":["import { useStore } from '../store'\nimport { Button, message, Upload } from 'antd'\nimport { InboxOutlined } from '@ant-design/icons'\nimport { observer, useLocalStore } from 'mobx-react'\nimport styled from 'styled-components'\nimport Loading from './Loading'\nimport { MutableRefObject, useEffect, useRef } from 'react'\nimport { handleCopy } from '../models'\n\nconst { Dragger } = Upload\n\nconst Result = styled.div`\n  margin-top: 20px;\n  border: 1px dashed #6ebcfc;\n  background: #fafafa;\n  padding: 20px;\n\n  > h2 {\n    text-align: center;\n  }\n\n  > dl {\n    .filename {\n      border: 1px solid #d9d9d9;\n      width: 100%;\n      padding: 4px;\n\n      &:focus {\n        outline: none;\n      }\n    }\n\n    > dt {\n      padding-bottom: 6px;\n      font-weight: 600;\n    }\n\n    img {\n      max-height: 280px;\n      max-width: 100%;\n      object-fit: contain;\n    }\n\n    .resize {\n      > input {\n        width: 100px;\n        border: 1px solid #d9d9d9;\n        padding: 4px;\n\n        &:focus {\n          outline: none;\n        }\n      }\n    }\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`\n\nconst Uploader = observer(() => {\n  const { ImageStore } = useStore()\n  const onlineUrlRef = useRef() as MutableRefObject<HTMLInputElement>\n  const resizeUrlRef = useRef() as MutableRefObject<HTMLInputElement>\n  const widthRef = useRef() as MutableRefObject<HTMLInputElement>\n  const heightRef = useRef() as MutableRefObject<HTMLInputElement>\n\n  const store = useLocalStore(() => ({\n    width: '',\n    setWidth() {\n      store.width = widthRef.current.value\n    },\n    get widthStr() {\n      return store.width ? `/w/${store.width}` : ''\n    },\n    height: '',\n    setHeight() {\n      store.height = heightRef.current.value\n    },\n    get heightStr() {\n      return store.height ? `/h/${store.height}` : ''\n    },\n    get fullStr() {\n      return (\n        ImageStore.serverFile.attributes.url.attributes.url +\n        '?imageView2/0' +\n        store.widthStr +\n        store.heightStr\n      )\n    },\n  }))\n\n  useEffect(() => {\n    return () => ImageStore.resetServerFile()\n  }, [])\n\n  const props = {\n    showUploadList: false,\n    beforeUpload: (file: any) => {\n      ImageStore.setFile(file)\n      ImageStore.setFilename(file.name)\n\n      if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/gi.test(file.type)) {\n        message.error('仅支持 png/svg/jpg/jpeg/gif 格式的图片')\n        return false\n      }\n\n      if (file.size > 2048 * 1024) {\n        message.error('图片最大支持2M')\n        return false\n      }\n\n      ImageStore.upload()\n        .then((file) => console.dir(file))\n        .catch((err) => {\n          console.error(err)\n        })\n      return false\n    },\n  }\n\n  return (\n    <>\n      {ImageStore.isUploading ? (\n        <>\n          <Loading />\n          <p\n            style={{ textAlign: 'center', fontSize: '18px', color: '#40a9ff' }}\n          >\n            努力上传中...\n          </p>\n        </>\n      ) : (\n        <>\n          <Dragger {...props}>\n            <p className=\"ant-upload-drag-icon\">\n              <InboxOutlined />\n            </p>\n            <p className=\"ant-upload-text\">点击或拖拽图片到这里上传</p>\n            <p className=\"ant-upload-hint\">\n              仅支持 png/svg/gif/jpg/jpeg 格式, 图片最大2M\n            </p>\n          </Dragger>\n        </>\n      )}\n\n      <div>\n        {ImageStore.serverFile ? (\n          <Result>\n            <h2>上传结果</h2>\n            <dl>\n              <dt>线上地址</dt>\n              <dd>\n                <input\n                  type=\"text\"\n                  className=\"filename\"\n                  value={ImageStore.serverFile.attributes.url.attributes.url}\n                  ref={onlineUrlRef}\n                  readOnly\n                />\n                <ButtonWrapper>\n                  <Button\n                    type=\"default\"\n                    size=\"small\"\n                    onClick={() => handleCopy(onlineUrlRef.current)}\n                  >\n                    复制\n                  </Button>\n                  <Button type=\"default\" size=\"small\">\n                    <a\n                      target=\"_blank\"\n                      href={ImageStore.serverFile.attributes.url.attributes.url}\n                      rel=\"noreferrer\"\n                    >\n                      打开\n                    </a>\n                  </Button>\n                </ButtonWrapper>\n              </dd>\n              <dt>文件名</dt>\n              <dd>\n                <input\n                  className=\"filename\"\n                  type=\"text\"\n                  value={ImageStore.filename}\n                  readOnly\n                />\n              </dd>\n              <dt>图片预览</dt>\n              <dd>\n                <img\n                  src={ImageStore.serverFile.attributes.url.attributes.url}\n                  alt=\"\"\n                />\n              </dd>\n              <dt>自定义尺寸</dt>\n              <dd className=\"resize\">\n                <input\n                  type=\"text\"\n                  placeholder=\" 宽度(可选)\"\n                  value={store.width}\n                  ref={widthRef}\n                  onChange={(e) => {\n                    if (\n                      e.target.value === '' ||\n                      /^[1-9][0-9]*$/.test(e.target.value)\n                    ) {\n                      store.setWidth()\n                    }\n                  }}\n                />{' '}\n                -{' '}\n                <input\n                  type=\"text\"\n                  placeholder=\" 高度(可选)\"\n                  ref={heightRef}\n                  value={store.height}\n                  onChange={(e) => {\n                    if (\n                      e.target.value === '' ||\n                      /^[1-9][0-9]*$/.test(e.target.value)\n                    ) {\n                      store.setHeight()\n                    }\n                  }}\n                />\n              </dd>\n              <dd>\n                <input\n                  type=\"text\"\n                  className=\"filename\"\n                  readOnly\n                  ref={resizeUrlRef}\n                  value={store.fullStr}\n                />\n                <ButtonWrapper>\n                  <Button\n                    type=\"default\"\n                    size=\"small\"\n                    onClick={() => {\n                      handleCopy(resizeUrlRef.current)\n                    }}\n                  >\n                    复制\n                  </Button>\n                  <Button type=\"default\" size=\"small\">\n                    <a target=\"_blank\" href={store.fullStr} rel=\"noreferrer\">\n                      打开\n                    </a>\n                  </Button>\n                </ButtonWrapper>\n              </dd>\n            </dl>\n          </Result>\n        ) : (\n          ''\n        )}\n      </div>\n    </>\n  )\n})\n\nexport default Uploader\n","import Uploader from '../components/Uploader'\n\nconst Home: React.FC = () => {\n  return (\n    <>\n      <div>\n        <Uploader />\n      </div>\n    </>\n  )\n}\n\nexport default Home\n"],"names":["Dragger","Upload","Result","styled","ButtonWrapper","observer","ImageStore","useStore","onlineUrlRef","useRef","resizeUrlRef","widthRef","heightRef","store","useLocalStore","width","setWidth","current","value","widthStr","height","setHeight","heightStr","fullStr","serverFile","attributes","url","useEffect","resetServerFile","props","showUploadList","beforeUpload","file","setFile","setFilename","name","test","type","size","message","upload","then","console","dir","catch","err","error","isUploading","Loading","style","textAlign","fontSize","color","className","InboxOutlined","ref","readOnly","onClick","handleCopy","target","href","rel","filename","src","alt","placeholder","onChange","e"],"sourceRoot":""}